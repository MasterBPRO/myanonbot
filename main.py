import os
import telebot
from flask import Flask, request
# Initial variables
token = os.environ.get('token')  # Bot`s token
url = os.environ.get('url')  # Heroku app url
private_chat = os.environ.get('private')  # Private chat ID of main person :)
public_chat = os.environ.get('public')  # Public chat ID
# Create bot and Flask app
bot = telebot.TeleBot(token)
server = Flask(__name__)
# Keyboard for user
choose_key = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
choose_key.add("üë• –í —á–∞—Ç", "üë§ –í –õ–°")


@bot.message_handler(commands=['start'])
def start_com(message):
    bot.send_message(message.chat.id, f"‚úåüèª –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ {message.from_user.first_name}!\n\n"
                                      f"üì® –Ø —è–≤–ª—è—é—Å—å —Å—Ä–µ–¥—Å—Ç–≤–æ–º –¥–ª—è –∞–Ω–æ–Ω–∏–º–Ω–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ –æ—Ç–∑—ã–≤–æ–≤ –æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏—Ö –≤ –∫–æ–º–ø–∞–Ω–∏–∏ <b>GrandTechGroup</b>\n\n"
                                      f"üî∞<b> –ù–µ—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–µ—Ç–æ–≤ –¥–ª—è –∞–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏–∏:\n"
                                      f" - –û—Ç–ø—Ä–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏—è–º\n"
                                      f" - –ù–µ –ø–∏—à–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ\n"
                                      f" - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥—Ä—É–≥–æ–π —Å—Ç–∏–ª—å –æ–±—â–µ–Ω–∏—è\n"
                                      f" - –í –ª—É—á—à–µ–º —Å–ª—É—á–∞–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Google Translate, —á—Ç–æ–±—ã –≤–∞—Å –Ω–µ–ª—å–∑—è –±—ã–ª–æ –≤—ã—á–µ—Å–ª–∏—Ç—å!</b>\n\n"
                                      f"<i>‚ÅâÔ∏è –ü–æ–º–Ω–∏—Ç–µ —á—Ç–æ —ç—Ç–æ—Ç –±–æ—Ç –Ω–∏–∫–∞–∫ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç –∏ –æ–±—Ä–∞—Ç—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ–º–∞—Ü–∏—é –æ –≤–∞—Å, –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º!</i>\n\n"
                                      f"‚ú≥Ô∏è –í—ã–±–µ—Ä–∏—Ç–µ –∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏—è:",
                     parse_mode="html", reply_markup=choose_key)


@bot.message_handler(func=lambda message: message.text == "üë• –í —á–∞—Ç")
@bot.message_handler(commands=['public'])
def public_com(message):
    bot.send_message(message.chat.id, "üì¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á—Ç–æ–±—ã –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ–≥–æ –≤ –ø—É–±–ª–∏—á–Ω—ã–π —á–∞—Ç: ")
    bot.register_next_step_handler(message, public_send)


@bot.message_handler(func=lambda message: message.text == "üë§ –í –õ–°")
@bot.message_handler(commands=['private'])
def private_com(message):
    bot.send_message(message.chat.id, "üì¨ –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –î–∏—Ä–µ–∫—Ç–æ—Ä—É: ")
    bot.register_next_step_handler(message, private_send)


@bot.message_handler(commands=['check'])
def check_com(message):
    bot.send_message(message.chat.id, "ü§ñ –°–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –∏ –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ!")


def private_send(message):
    try:
        if message.photo is not None:
            bot.send_photo(private_chat, photo=message.photo[2].file_id)
        elif message.video is not None:
            bot.send_video(private_chat, data=message.video.file_id)
        elif message.video_note is not None:
            bot.send_video_note(private_chat, data=message.video_note.file_id)
        elif message.document is not None:
            bot.send_document(private_chat, data=message.document.file_id)
        else:
            bot.send_message(private_chat, message.text)

        bot.send_message(message.chat.id, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ!")
    except Exception as PrivateSendError:
        bot.send_message(message.chat.id, "üòµ –£–ø—Å...\n"
                                          "üöß –í–∞—Ç—Å–æ–Ω —É –Ω–∞—Å –æ—à–∏–±–∫–∞!\n"
                                          "‚õîÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–∞–ø–ø–æ—Ä—Ç—É: @myservebot")
        print(f"[!] PrivateSendError: {PrivateSendError}")


def public_send(message):
    try:
        if message.photo is not None:
            bot.send_photo(public_chat, photo=message.photo[2].file_id)
        elif message.video is not None:
            bot.send_video(public_chat, data=message.video.file_id)
        elif message.video_note is not None:
            bot.send_video_note(public_chat, data=message.video_note.file_id)
        elif message.document is not None:
            bot.send_document(public_chat, data=message.document.file_id)
        else:
            bot.send_message(public_chat, message.text)

        bot.send_message(message.chat.id, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ!")
    except Exception as PublicSendError:
        bot.send_message(message.chat.id, "üòµ –£–ø—Å...\n"
                                          "üöß –í–∞—Ç—Å–æ–Ω —É –Ω–∞—Å –æ—à–∏–±–∫–∞!\n"
                                          "‚õîÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Å–∞–ø–ø–æ—Ä—Ç—É: @myservebot")
        print(f"[!] PublicSendError: {PublicSendError}")


@server.route('/' + token, methods=['POST'])
def getMessage():
    bot.process_new_updates([telebot.types.Update.de_json(request.stream.read().decode("utf-8"))])
    return "!", 200


@server.route("/")
def webhook():
    bot.remove_webhook()
    bot.set_webhook(url=url + TOKEN)
    return "!", 200


if __name__ == "__main__":
    server.run(host="0.0.0.0", port=int(os.environ.get('PORT', 5000)))
    # bot.polling(none_stop=True)
